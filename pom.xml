<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!--备注：使用nexus私服时用这个pom -->

	<!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app -->
	<groupId>com.demo</groupId>
	<!--构件的标识符，它和group ID一起唯一标识一个构件 -->
	<artifactId>allwinrobot2</artifactId>
	<!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 -->
	<version>0.0.1-SNAPSHOT</version>
	<!--项目产生的构件类型，例如jar、war、ear、pom...，这里不需要 -->
	<!--<packaging>jar</packaging>-->

	<!--项目的名称, Maven产生的文档用 -->
	<name>allwinrobot2</name>
	<!--项目主页的URL, Maven产生的文档用 -->
	<url>http://maven.apache.org</url>

	<!--自定义变量 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cucumber.version>4.2.4</cucumber.version>
		<aspectj.version>1.8.10</aspectj.version>
	</properties>

	<!--发布本地构建项目到Nexus的发布地址配置，地址是nexus的releases和snapshots仓库 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Releases</name>
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Snapshots</name>
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<!--添加项目依赖包 -->
	<dependencies>
		<dependency>
			<groupId>com.sikuli</groupId>
			<artifactId>sikuliapi</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.14.3</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
    		<groupId>com.jayway.jsonpath</groupId>
    		<artifactId>json-path</artifactId>
    		<version>2.2.0</version>
		</dependency>
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>5.1.48</version>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-core</artifactId>
		    <version>${cucumber.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>${cucumber.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-jvm</artifactId>
		    <version>${cucumber.version}</version>
		    <type>pom</type>
		</dependency>
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-testng</artifactId>
		    <version>${cucumber.version}</version>
		</dependency>
		<dependency>
			 <groupId>io.cucumber</groupId>
			 <artifactId>cucumber-picocontainer</artifactId>
			 <version>${cucumber.version}</version>
		</dependency>
		<dependency>
			 <groupId>org.picocontainer</groupId>
			 <artifactId>picocontainer</artifactId>
			 <version>2.15</version>
		</dependency>
		<dependency>
		    <groupId>io.qameta.allure</groupId>
		    <artifactId>allure-cucumber4-jvm</artifactId>
		    <version>2.12.1</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>allwinrobot2</finalName>
		<!-- 引入资源文件 -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<!--maven执行测试的插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<!--设置maven使用独立的类加载器 -->
					<useSystemClassLoader>false</useSystemClassLoader>
					<!--设置参数命令行：解决用maven执行test时日志乱码的问题，解决maven out of memory问题 -->
					<argLine>
						-Dfile.encoding=UTF-8 -Xms1024m -Xmx1024m
						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
					</argLine>
					<!--代表的是要执行的测试套件名称 -->
					<suiteXmlFiles>
						<suiteXmlFile>src/test/java/runners/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<!--定义maven运行测试生成的报表路径 -->
					<reportsDirectory>target/result/maven-testng-report</reportsDirectory>
					<!--测试失败后，是否忽略并继续测试 -->
					<testFailureIgnore>true</testFailureIgnore>
					<!--系统属性配置 -->
					<systemPropertyVariables>
						<!-- allure相关属性 -->
	                    <allure.results.directory>target/result/allure-results</allure.results.directory>
	                    <allure.link.issue.pattern>https://example.org/browse/{}</allure.link.issue.pattern>
	                    <allure.link.tms.pattern>https://example.org/browse/{}</allure.link.tms.pattern>
	                    <!-- 指定并行执行线程数 -->
	                    <dataproviderthreadcount>1</dataproviderthreadcount>
                	</systemPropertyVariables>
				</configuration>
				<dependencies>
                <dependency>
                    <groupId>org.aspectj</groupId>
                    <artifactId>aspectjweaver</artifactId>
                    <version>${aspectj.version}</version>
                </dependency>
            </dependencies>
			</plugin>

			<plugin>
				<!--控制maven项目源码jdk版本插件，maven的默认编译使用的jdk版本貌似很低 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
